/*******************************************************************************
 * Copyright (c) 2000, 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.testng.eclipse.ui;


import org.eclipse.jdt.core.IJavaElement;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jdt.core.IMethod;
import org.eclipse.jdt.core.ISourceRange;
import org.eclipse.jdt.core.IType;
import org.eclipse.jdt.core.ITypeHierarchy;
import org.eclipse.jdt.core.JavaModelException;
import org.eclipse.jface.dialogs.MessageDialog;
import org.eclipse.ui.texteditor.ITextEditor;

import org.testng.eclipse.util.JDTUtil;
import org.testng.eclipse.util.ResourceUtil;

/**
 * Open a class on a Test method.
 */
public class OpenTestAction extends OpenEditorAction {

  private String fMethodName;
  private ISourceRange fRange;

  /**
   * Constructor for OpenTestAction.
   */
  public OpenTestAction(TestRunnerViewPart testRunner, String className, String method) {
    this(testRunner, className, method, true);
  }

  public OpenTestAction(TestRunnerViewPart testRunner, String className) {
    this(testRunner, className, null);
  }

  public OpenTestAction(TestRunnerViewPart testRunner, String className, String method, boolean activate) {
    super(testRunner, className, activate);
    fMethodName = method;
  }

  protected IJavaElement findElement(IJavaProject project, String className)
  throws JavaModelException {
    IJavaElement javaElement= JDTUtil.findElement(project, className, fMethodName);
    
    if(null == fMethodName) {
      return javaElement;
    }
    
    IMethod method= (IMethod) javaElement;

    if(null == method) {
      String title = ResourceUtil.getString("OpenTestAction.error.title"); //$NON-NLS-1$
      String message = ResourceUtil.getFormattedString("OpenTestAction.error.methodNoFound", //$NON-NLS-1$
                                                       fMethodName);
      MessageDialog.openInformation(getShell(), title, message);

    }
    fRange = method.getNameRange();
    
    return javaElement;
  }

  protected void reveal(ITextEditor textEditor) {
    if (fRange != null) {
      textEditor.selectAndReveal(fRange.getOffset(), fRange.getLength());
    }
  }

  public boolean isEnabled() {
    if(null == getClassName()) {
	  // HINT: should never happen now
      return false;
    }
    
    try {
      return getLaunchedProject().findType(getClassName()) != null;
    }
    catch (JavaModelException e) {
    }

    return false;
  }
}
